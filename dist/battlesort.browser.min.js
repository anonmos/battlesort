var Battlesort=function(){"use strict";class t{constructor(t){this.arr=t,this.setLeftChild=t=>{this.left=t,this.left.parent=this},this.setRightChild=t=>{this.right=t,this.right.parent=this},this.getLeftChild=()=>this.left,this.getRightChild=()=>this.right,this.getParent=()=>this.parent,this.isLeaf=()=>!this.left&&!this.right&&1===this.arr.length,1===t.length&&(this.solvedArr=t)}}class i{}i.enabled=!1,i.log=t=>{i.enabled&&console.log(t)};class e{constructor(i){this.gatheredLeaves=[],this.rootNode=new t(i),this.currentNode=this.rootNode}getNextNodeArray(e,r,s){this.currentNode.solvedArr=e,i.log("Setting solved array: "+JSON.stringify(e)),this.currentNode.leftEndIndex=r,this.currentNode.rightBeginIndex=s,2===this.currentNode.solvedArr.length?(i.log("Finished block"),this.currentNode.left=new t([this.currentNode.solvedArr[0]]),i.log("Setting finished left: "+JSON.stringify(this.currentNode.left.solvedArr)),this.currentNode.right=new t([this.currentNode.solvedArr[1]]),i.log("Setting finished left: "+JSON.stringify(this.currentNode.right.solvedArr))):(this.currentNode.left=new t(this.currentNode.solvedArr.slice(0,this.currentNode.leftEndIndex)),this.currentNode.right=new t(this.currentNode.solvedArr.slice(this.currentNode.rightBeginIndex-1,this.currentNode.solvedArr.length)),i.log("Setting left: "+JSON.stringify(this.currentNode.left.arr)),i.log("Setting right: "+JSON.stringify(this.currentNode.right.arr)));const h=this.findNextNode();return h?(this.currentNode=h,this.currentNode.arr):h}findNextNode(t){const i=t||this.rootNode;if(!i.solvedArr&&!i.isLeaf())return i;if(i.isLeaf())return;let e=this.findNextNode(i.left);return e||this.findNextNode(i.right)}gatherLeaves(t){const i=t||this.rootNode;i.isLeaf()?this.gatheredLeaves.push(i.arr[0]):(i.left&&this.gatherLeaves(i.left),i.right&&this.gatherLeaves(i.right))}getFinalArray(){return this.gatherLeaves(this.rootNode),this.gatheredLeaves}}var r;!function(t){t.PIVOT_GREATER="PIVOT_GT",t.COMPARISON_GREATER="COMPARISON_GT",t.EQUAL="EQ"}(r||(r={}));return class{constructor(t,i,r=!1){this.finishedCallback=i,this.arrayOfThings=[],this.originalArrayOfThings=[],this.tree=new e(this.arrayOfThings),this.leftPointer=0,this.rightPointer=this.arrayOfThings.length-1,this.pivot=this.arrayOfThings[Math.floor((this.leftPointer+this.rightPointer)/2)],this.pivotPointerIndex=Math.floor((this.leftPointer+this.rightPointer)/2),this.mode="LEFT_POINTER",this.done=!1,this.skips=0,this.autoSortTracker={},this.actionTracker=[],this.originalArrayOfThings=[...t],this.resetBattlesortState(),r&&this.enableLogging()}resetBattlesortState(){this.arrayOfThings=[...this.originalArrayOfThings],this.tree=new e(this.arrayOfThings),this.leftPointer=0,this.rightPointer=this.arrayOfThings.length-1,this.pivot=this.arrayOfThings[Math.floor((this.leftPointer+this.rightPointer)/2)],this.pivotPointerIndex=Math.floor((this.leftPointer+this.rightPointer)/2),this.mode="LEFT_POINTER",this.done=!1,this.skips=0,this.autoSortTracker={},this.actionTracker=[]}setNewBattle(){const t=this.tree.getNextNodeArray(this.arrayOfThings,this.leftPointer,this.leftPointer+1);t?(this.arrayOfThings=t,this.leftPointer=0,this.rightPointer=this.arrayOfThings.length-1,this.pivot=this.arrayOfThings[Math.floor((this.leftPointer+this.rightPointer)/2)],this.pivotPointerIndex=Math.floor((this.leftPointer+this.rightPointer)/2),this.mode="LEFT_POINTER",i.log(`Resetting with: ${JSON.stringify(this.arrayOfThings)}, leftPointer: ${this.leftPointer}, rightPointer: ${this.rightPointer}, pivotPointer: ${Math.floor((this.leftPointer+this.rightPointer)/2)}, pivotValue: ${this.pivot}`)):(i.log("Battle finished!"),i.log("Clicks saved: "+this.skips),this.finishedCallback(this.tree.getFinalArray()),this.done=!0)}autoSort(){const t="LEFT_POINTER"===this.mode?this.leftPointer:this.rightPointer,i=this.arrayOfThings[t].toString(),e=this.pivot.toString();let s=void 0;return this.autoSortTracker[e]&&this.autoSortTracker[e][i]&&(s=this.autoSortTracker[e][i]),!s&&this.autoSortTracker[i]&&this.autoSortTracker[i][e]&&(s=this.getReverseComparison(this.autoSortTracker[i][e])),s||i!==e||(s=r.EQUAL),s===r.PIVOT_GREATER?(this.pivotItemGreater(!0),this.skips++):s===r.COMPARISON_GREATER?(this.comparisonItemGreater(!0),this.skips++):s===r.EQUAL&&(this.itemsEqual(!0),this.skips++),void 0!==s}swapLeftWithRight(){let t=this.arrayOfThings[this.leftPointer];this.arrayOfThings[this.leftPointer]=this.arrayOfThings[this.rightPointer],this.arrayOfThings[this.rightPointer]=t}getReverseComparison(t){let i=r.EQUAL;return t===r.PIVOT_GREATER?i=r.COMPARISON_GREATER:t===r.COMPARISON_GREATER&&(i=r.PIVOT_GREATER),i}trackComparison(t,i){const e="LEFT_POINTER"===this.mode?this.leftPointer:this.rightPointer,r=this.arrayOfThings[e].toString(),s=this.pivot.toString();this.autoSortTracker[s]||(this.autoSortTracker[s]={}),this.autoSortTracker[s][r]||(this.autoSortTracker[s][r]=t),this.autoSortTracker[r]||(this.autoSortTracker[r]={}),this.autoSortTracker[r][s]||(this.autoSortTracker[r][s]=this.getReverseComparison(t)),i&&this.actionTracker.push(t)}getDisplayables(){let t="LEFT_POINTER"===this.mode?this.leftPointer:this.rightPointer;return{comparison:this.arrayOfThings[t],pivot:this.pivot,isDone:this.done}}undo(){const t=this.actionTracker.slice(0,this.actionTracker.length-1);return this.resetBattlesortState(),t.forEach(t=>{t===r.PIVOT_GREATER?this.pivotItemGreater():t===r.COMPARISON_GREATER?this.comparisonItemGreater():t===r.EQUAL&&this.itemsEqual()}),this.getDisplayables()}itemsEqual(t=!1){if(this.trackComparison(r.EQUAL,!t),this.leftPointer<=this.rightPointer&&!this.done?"LEFT_POINTER"===this.mode?this.mode="RIGHT_POINTER":"RIGHT_POINTER"===this.mode&&(this.swapLeftWithRight(),this.mode="LEFT_POINTER",this.leftPointer++,this.rightPointer--):this.leftPointer>this.rightPointer&&!this.done?this.setNewBattle():this.done?i.log("DONE!"):i.log("SHOULD NOT GET HERE!"),!t){let t=this.autoSort();for(;t&&!this.done;)t=this.autoSort()}return this.getDisplayables()}comparisonItemGreater(t=!1){if(this.trackComparison(r.COMPARISON_GREATER,!t),this.leftPointer<=this.rightPointer&&!this.done?"LEFT_POINTER"===this.mode?this.mode="RIGHT_POINTER":this.rightPointer--:this.leftPointer>this.rightPointer&&!this.done?this.setNewBattle():this.done?i.log("DONE!"):i.log("SHOULD NOT GET HERE!"),!t){let t=this.autoSort();for(;t&&!this.done;)t=this.autoSort()}return this.getDisplayables()}pivotItemGreater(t=!1){if(this.trackComparison(r.PIVOT_GREATER,!t),this.leftPointer<=this.rightPointer&&!this.done?"LEFT_POINTER"===this.mode&&this.leftPointer<=this.rightPointer?this.leftPointer++:"RIGHT_POINTER"===this.mode&&(this.swapLeftWithRight(),this.mode="LEFT_POINTER",this.leftPointer++,this.rightPointer--):this.leftPointer>this.rightPointer&&!this.done?this.setNewBattle():this.done?i.log("DONE!"):i.log("SHOULD NOT GET HERE!"),!t){let t=this.autoSort();for(;t&&!this.done;)t=this.autoSort()}return this.getDisplayables()}getDebugValues(){return{leftPointer:this.leftPointer,leftPointerValue:this.arrayOfThings[this.leftPointer],rightPointer:this.rightPointer,rightPointerValue:this.arrayOfThings[this.rightPointer],pivot:this.pivotPointerIndex,pivotValue:this.pivot,arrayOfThings:this.arrayOfThings,mode:this.mode,done:this.done}}enableLogging(){i.enabled=!0}disableLogging(){i.enabled=!1}}}();
